# File: .github/workflows/nextjs.yml
name: Deploy Next.js site to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Set explicit permissions
permissions:
  contents: write  # This is crucial for pushing to branches

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # This is important for the deploy action

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Create .env.local file
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.local

      - name: Build Next.js application
        run: npm run build

      # Create out directory if it doesn't exist
      - name: Create out directory if needed
        run: mkdir -p out

      # Create .nojekyll file
      - name: Add .nojekyll file
        run: touch out/.nojekyll

      # Deploy using direct git commands
      - name: Deploy to GitHub Pages
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Create and switch to a new orphan branch (no history)
          git checkout --orphan gh-pages-temp
          
          # Remove all files from staging
          git rm -rf .
          
          # Copy the build output to the root
          cp -r out/* .
          
          # Create .nojekyll file
          touch .nojekyll
          
          # Stage all changes
          git add .
          
          # Commit changes
          git commit -m "Deploy to GitHub Pages"
          
          # Force push to gh-pages branch
          git push -f origin gh-pages-temp:gh-pages
